
generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(EMPLOYEE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  expenses  Expense[]
}

model Company {
  id        String   @id @default(cuid())
  name      String
  services  Service[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id        String   @id @default(cuid())
  name      String   // "Construction", "Fibre Optique"
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  projects  Project[]
  expenses  Expense[]
}

model Project {
  id        String   @id @default(cuid())
  name      String
  service   Service  @relation(fields: [serviceId], references: [id])
  serviceId String
  expenses  Expense[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Supplier {
  id        String   @id @default(cuid())
  name      String
  contact   String?
  email     String?
  expenses  Expense[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Expense {
  id          String   @id @default(cuid())
  description String
  amount      Float
  date        DateTime @default(now())
  
  user        User     @relation(fields: [userId], references: [id])
  userId      String

  supplier    Supplier? @relation(fields: [supplierId], references: [id])
  supplierId  String?

  project     Project?  @relation(fields: [projectId], references: [id])
  projectId   String?

  service     Service   @relation(fields: [serviceId], references: [id])
  serviceId   String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  ADMIN
  ACCOUNTANT
  EMPLOYEE
}
