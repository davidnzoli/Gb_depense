generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(EMPLOYEE)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expenses  Expense[]
}

model Company {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  services  Service[]
}

model Service {
  id        Int       @id @default(autoincrement())
  name      String
  companyId String?
  createdAt DateTime  @default(now())
  expenses  Expense[]
  projects  Project[]
  company   Company?  @relation(fields: [companyId], references: [id])
}

model Project {
  id        String    @id @default(cuid())
  name      String
  serviceId Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expenses  Expense[]
  service   Service   @relation(fields: [serviceId], references: [id])
}

model Supplier {
  id        String    @id @default(cuid())
  name      String
  contact   String?
  email     String?
  nationalite String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expenses  Expense[]
}

model Expense {
  id           String    @id @default(cuid())
  libelle      String?
  rubrique     String?
  beneficiaire String?
  amount       Float
  date         DateTime  @default(now())
  userId       String?
  supplierId   String?
  projectId    String?
  serviceId    Int?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  project      Project?  @relation(fields: [projectId], references: [id])
  service      Service?  @relation(fields: [serviceId], references: [id])
  supplier     Supplier? @relation(fields: [supplierId], references: [id])
  user         User?     @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  ACCOUNTANT
  EMPLOYEE
}
